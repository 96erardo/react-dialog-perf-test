[{"/home/gerardo/Proyectos/dialog-performance/src/index.tsx":"1","/home/gerardo/Proyectos/dialog-performance/src/reportWebVitals.ts":"2","/home/gerardo/Proyectos/dialog-performance/src/App.tsx":"3","/home/gerardo/Proyectos/dialog-performance/src/shared/config/client.ts":"4","/home/gerardo/Proyectos/dialog-performance/src/shared/graphql-types.ts":"5","/home/gerardo/Proyectos/dialog-performance/src/shared/config/table-icons.tsx":"6","/home/gerardo/Proyectos/dialog-performance/src/shared/components/Layout.tsx":"7","/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextView.tsx":"8","/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useToDos.ts":"9","/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextRow.tsx":"10","/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextDeleteDialog.tsx":"11","/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextFormDialog.tsx":"12","/home/gerardo/Proyectos/dialog-performance/src/to-do/to-do-actions.ts":"13","/home/gerardo/Proyectos/dialog-performance/src/to-do/to-do-queries.ts":"14","/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/WithContextView.tsx":"15","/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/DialogContext.tsx":"16","/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useDialogOpener.ts":"17","/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/ContextRow.tsx":"18","/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/ContextFormDialog.tsx":"19","/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useDialogParams.ts":"20","/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useDialogCloser.ts":"21","/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/ContextDeleteDialog.tsx":"22"},{"size":500,"mtime":1608935515173,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1608858118818,"results":"25","hashOfConfig":"24"},{"size":822,"mtime":1610931344627,"results":"26","hashOfConfig":"24"},{"size":274,"mtime":1608941660265,"results":"27","hashOfConfig":"24"},{"size":15864,"mtime":1609465460919,"results":"28","hashOfConfig":"24"},{"size":2788,"mtime":1608946477930,"results":"29","hashOfConfig":"30"},{"size":883,"mtime":1608949736479,"results":"31","hashOfConfig":"24"},{"size":4997,"mtime":1610217173141,"results":"32","hashOfConfig":"24"},{"size":1423,"mtime":1609468981127,"results":"33","hashOfConfig":"24"},{"size":1834,"mtime":1609466601095,"results":"34","hashOfConfig":"24"},{"size":1329,"mtime":1609469004108,"results":"35","hashOfConfig":"24"},{"size":3844,"mtime":1609466648984,"results":"36","hashOfConfig":"24"},{"size":3702,"mtime":1609468966359,"results":"37","hashOfConfig":"24"},{"size":1011,"mtime":1609466492289,"results":"38","hashOfConfig":"24"},{"size":4452,"mtime":1611448097253,"results":"39","hashOfConfig":"24"},{"size":1372,"mtime":1610156735631,"results":"40","hashOfConfig":"24"},{"size":224,"mtime":1610156741375,"results":"41","hashOfConfig":"24"},{"size":2103,"mtime":1610921522877,"results":"42","hashOfConfig":"24"},{"size":3919,"mtime":1610921511549,"results":"43","hashOfConfig":"24"},{"size":423,"mtime":1610068185811,"results":"44","hashOfConfig":"24"},{"size":210,"mtime":1610068276595,"results":"45","hashOfConfig":"24"},{"size":1371,"mtime":1610921553397,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1jxi2g1",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"13rawz9",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/home/gerardo/Proyectos/dialog-performance/src/index.tsx",[],["96","97"],"/home/gerardo/Proyectos/dialog-performance/src/reportWebVitals.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/App.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/shared/config/client.ts",[],["98","99"],"/home/gerardo/Proyectos/dialog-performance/src/shared/graphql-types.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/shared/config/table-icons.tsx",[],["100","101"],"/home/gerardo/Proyectos/dialog-performance/src/shared/components/Layout.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextView.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useToDos.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextRow.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextDeleteDialog.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/no-context/NoContextFormDialog.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/to-do-actions.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/to-do-queries.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/WithContextView.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/DialogContext.tsx",[],["102","103"],"/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useDialogOpener.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/ContextRow.tsx",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/ContextFormDialog.tsx",["104"],"import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport { \n  FetchToDos_toDosList_items as ToDo \n} from '../../shared/graphql-types';\nimport { createToDo, updateToDo } from '../to-do-actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDialogParams, useDialogCloser } from 'react-dialog-handler';\n\nconst initialState = {\n  title: '',\n  description: '',\n  finished: false,\n}\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      marginBottom: theme.spacing(2),\n    }\n  }\n}))\n\nexport const modalId = 'toDo-form-dialog';\n\nexport const ContextFormDialog: React.FC<Props> = ({ onSubmitted }) => {\n  const { open, params } = useDialogParams<Params>(modalId);\n  const closeDialog = useDialogCloser();\n  const [form, setForm] = useState<Form>(initialState);\n  const [loading, setLoading] = useState(false);\n  const classes = useStyle();\n\n  useEffect(() => {\n    if (open && params && params.toDo) {\n      setForm(prevState => ({\n        ...prevState,\n        title: params.toDo?.title || '',\n        description: params.toDo?.description || '',\n        finished: params.toDo?.finished || false,\n      }));\n\n    } else if (open && (!params || params.toDo === null)) {\n      setForm(initialState);\n    }\n  }, [open, params]);\n\n  const onClose = useCallback(() => {\n    closeDialog(modalId);\n  }, [closeDialog]);\n\n  const onInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value, checked } = e.target;\n\n    setForm(prevState => ({\n      ...prevState,\n      [name]: name === 'finished' ? checked : value\n    }))\n  }, []);\n\n  const onSubmit = useCallback(async () => {\n    setLoading(true);\n\n    const [err, data] = params?.toDo ? (\n      await updateToDo({\n        id: params.toDo.id || '',\n        title: form.title,\n        description: form.description,\n        finished: form.finished\n      })\n    ) : (\n      await createToDo({\n        title: form.title,\n        description: form.description,\n        finished: form.finished,\n      })        \n    );\n\n    setLoading(false);\n\n    if (err) {\n      alert(err.message);\n    }\n\n    if (data) {\n      onSubmitted();\n    }\n\n    onClose();\n  }, [form, onClose, onSubmitted]);\n\n  return (\n    <Dialog maxWidth=\"sm\" open={open}>\n      <DialogTitle>\n        {params?.toDo ? 'Update To Do' : 'Create To Do'}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        <TextField \n          fullWidth\n          id=\"title\"\n          name=\"title\"\n          label=\"Title\"\n          variant=\"outlined\"\n          value={form.title}\n          onChange={onInputChange}\n        />\n        <TextField \n          fullWidth\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          variant=\"outlined\"\n          value={form.description}\n          onChange={onInputChange}\n        />\n        <Switch \n          name=\"finished\"\n          checked={form.finished}\n          onChange={onInputChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button \n          color=\"primary\"\n          disabled={loading}\n          onClick={onClose}\n        >\n          Cancel\n        </Button>\n        <Button \n          color=\"primary\"\n          disabled={loading} \n          onClick={onSubmit}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\ntype Props = {\n  onSubmitted: () => void\n}\n\ntype Form = {\n  title: string,\n  description: string,\n  finished: boolean\n}\n\nexport type Params = {\n  toDo?: ToDo | null\n}","/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useDialogParams.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/hooks/useDialogCloser.ts",[],"/home/gerardo/Proyectos/dialog-performance/src/to-do/with-context/ContextDeleteDialog.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"105","replacedBy":"111"},{"ruleId":"107","replacedBy":"112"},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":95,"column":6,"nodeType":"117","endLine":95,"endColumn":34,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],["119"],["120"],["119"],["120"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'params.toDo'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [form.description, form.finished, form.title, onClose, onSubmitted, params.toDo]",{"range":"124","text":"125"},[2575,2603],"[form.description, form.finished, form.title, onClose, onSubmitted, params.toDo]"]